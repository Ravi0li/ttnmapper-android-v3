/**
* The Things Stack for LoRaWAN v3 API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: version not set
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.V3ContactInfo
import org.openapitools.client.models.V3DownlinkPathConstraint
import org.openapitools.client.models.V3GatewayAntenna
import org.openapitools.client.models.V3GatewayIdentifiers
import org.openapitools.client.models.V3GatewayVersionIdentifiers
import org.openapitools.client.models.V3Secret

import com.squareup.moshi.Json

/**
 * Gateway is the message that defines a gateway on the network.
 * @param ids 
 * @param createdAt 
 * @param updatedAt 
 * @param name 
 * @param description 
 * @param attributes Key-value attributes for this gateway. Typically used for organizing gateways or for storing integration-specific data.
 * @param contactInfo Contact information for this gateway. Typically used to indicate who to contact with technical/security questions about the gateway.
 * @param versionIds 
 * @param gatewayServerAddress The address of the Gateway Server to connect to. The typical format of the address is \"host:port\". If the port is omitted, the normal port inference (with DNS lookup, otherwise defaults) is used. The connection shall be established with transport layer security (TLS). Custom certificate authorities may be configured out-of-band.
 * @param autoUpdate 
 * @param updateChannel 
 * @param frequencyPlanId Frequency plan ID of the gateway. This equals the first element of the frequency_plan_ids field.
 * @param frequencyPlanIds Frequency plan IDs of the gateway. The first element equals the frequency_plan_id field.
 * @param antennas 
 * @param statusPublic The status of this gateway may be publicly displayed.
 * @param locationPublic The location of this gateway may be publicly displayed.
 * @param scheduleDownlinkLate Enable server-side buffering of downlink messages. This is recommended for gateways using the Semtech UDP Packet Forwarder v2.x or older, as it does not feature a just-in-time queue. If enabled, the Gateway Server schedules the downlink message late to the gateway so that it does not overwrite previously scheduled downlink messages that have not been transmitted yet.
 * @param enforceDutyCycle Enforcing gateway duty cycle is recommended for all gateways to respect spectrum regulations. Disable enforcing the duty cycle only in controlled research and development environments.
 * @param downlinkPathConstraint 
 * @param scheduleAnytimeDelay Adjust the time that GS schedules class C messages in advance. This is useful for gateways that have a known high latency backhaul, like 3G and satellite.
 * @param updateLocationFromStatus Update the location of this gateway from status messages. This only works for gateways connecting with authentication; gateways connected over UDP are not supported.
 * @param lbsLnsSecret 
 */

data class V3Gateway (
    @Json(name = "ids")
    val ids: V3GatewayIdentifiers? = null,
    @Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime? = null,
    @Json(name = "updated_at")
    val updatedAt: java.time.OffsetDateTime? = null,
    @Json(name = "name")
    val name: kotlin.String? = null,
    @Json(name = "description")
    val description: kotlin.String? = null,
    /* Key-value attributes for this gateway. Typically used for organizing gateways or for storing integration-specific data. */
    @Json(name = "attributes")
    val attributes: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,
    /* Contact information for this gateway. Typically used to indicate who to contact with technical/security questions about the gateway. */
    @Json(name = "contact_info")
    val contactInfo: kotlin.collections.List<V3ContactInfo>? = null,
    @Json(name = "version_ids")
    val versionIds: V3GatewayVersionIdentifiers? = null,
    /* The address of the Gateway Server to connect to. The typical format of the address is \"host:port\". If the port is omitted, the normal port inference (with DNS lookup, otherwise defaults) is used. The connection shall be established with transport layer security (TLS). Custom certificate authorities may be configured out-of-band. */
    @Json(name = "gateway_server_address")
    val gatewayServerAddress: kotlin.String? = null,
    @Json(name = "auto_update")
    val autoUpdate: kotlin.Boolean? = null,
    @Json(name = "update_channel")
    val updateChannel: kotlin.String? = null,
    /* Frequency plan ID of the gateway. This equals the first element of the frequency_plan_ids field. */
    @Json(name = "frequency_plan_id")
    val frequencyPlanId: kotlin.String? = null,
    /* Frequency plan IDs of the gateway. The first element equals the frequency_plan_id field. */
    @Json(name = "frequency_plan_ids")
    val frequencyPlanIds: kotlin.collections.List<kotlin.String>? = null,
    @Json(name = "antennas")
    val antennas: kotlin.collections.List<V3GatewayAntenna>? = null,
    /* The status of this gateway may be publicly displayed. */
    @Json(name = "status_public")
    val statusPublic: kotlin.Boolean? = null,
    /* The location of this gateway may be publicly displayed. */
    @Json(name = "location_public")
    val locationPublic: kotlin.Boolean? = null,
    /* Enable server-side buffering of downlink messages. This is recommended for gateways using the Semtech UDP Packet Forwarder v2.x or older, as it does not feature a just-in-time queue. If enabled, the Gateway Server schedules the downlink message late to the gateway so that it does not overwrite previously scheduled downlink messages that have not been transmitted yet. */
    @Json(name = "schedule_downlink_late")
    val scheduleDownlinkLate: kotlin.Boolean? = null,
    /* Enforcing gateway duty cycle is recommended for all gateways to respect spectrum regulations. Disable enforcing the duty cycle only in controlled research and development environments. */
    @Json(name = "enforce_duty_cycle")
    val enforceDutyCycle: kotlin.Boolean? = null,
    @Json(name = "downlink_path_constraint")
    val downlinkPathConstraint: V3DownlinkPathConstraint? = null,
    /* Adjust the time that GS schedules class C messages in advance. This is useful for gateways that have a known high latency backhaul, like 3G and satellite. */
    @Json(name = "schedule_anytime_delay")
    val scheduleAnytimeDelay: kotlin.String? = null,
    /* Update the location of this gateway from status messages. This only works for gateways connecting with authentication; gateways connected over UDP are not supported. */
    @Json(name = "update_location_from_status")
    val updateLocationFromStatus: kotlin.Boolean? = null,
    @Json(name = "lbs_lns_secret")
    val lbsLnsSecret: V3Secret? = null
)

